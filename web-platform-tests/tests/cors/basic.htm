<!DOCTYPE html>
<meta charset=utf-8>
<title>Basic CORS</title>
<meta name=help href=http://dvcs.w3.org/hg/cors/raw-file/tip/Overview.html#simple-cross-origin-request-0>
<meta name=author title="Odin HÃ¸rthe Omdal" href="mailto:odiho@opera.com">

<script src=/resources/testharness.js></script>
<script src=/resources/testharnessreport.js></script>
<script src=support.js?pipe=sub></script>
<div id=log></div>

<script>

var counter = 0;

function cors(desc, url) {
    async_test(desc).step(function() {
        var client = new XMLHttpRequest();
        this.count = counter++;

        client.open("GET", url + "resources/cors-makeheader.py?get_value=hest_er_best&origin=none&" + this.count);

        client.onreadystatechange = this.step_func(function(e) {
            // First request, test that it fails with no origin
            if (client.readyState < 4) return;
            if (!url)
                assert_true(client.response.indexOf("hest_er_best") != -1, "Got response");
            else
                assert_false(!!client.response, "Got CORS-disallowed response");

            client = new XMLHttpRequest();
            client.open("GET", url + "resources/cors-makeheader.py?get_value=hest_er_best&" + this.count);
            client.onreadystatechange = this.step_func(function(e) {
                // Second request, test that it passes with the allowed-origin
                if (client.readyState < 4) return;
                assert_true(client.response.indexOf("hest_er_best") != -1, "Got CORS-allowed response");
                this.done();
            });
            client.send();
        });
        client.send();
    });
}

cors("Same domain basic usage", "");
cors("Cross domain basic usage", CROSSDOMAIN);
cors("Same domain different port",
        "http://" + location.hostname + ":" + PORT + dirname(location.pathname));

cors("Cross domain different port",
        "http://" + SUBDOMAIN + "." + location.hostname + ":"
        + PORT + dirname(location.pathname));

/* These require HTTPS setup, so will often fail locally */
cors("Same domain different protocol",
        'https://' + location.host + dirname(location.pathname));

cors("Cross domain different protocol",
        CROSSDOMAIN.replace("http:", "https:"));

/* W3C has no "alternative" port for HTTPS. So turn these tests off.

cors("Same domain different protocol different port",
        "https://" + location.hostname + ":" + PORTS + dirname(location.pathname));

cors("Cross domain different protocol different port",
        "https://" + SUBDOMAIN + "." + location.hostname + ":"
        + PORTS + dirname(location.pathname));
*/

</script>
