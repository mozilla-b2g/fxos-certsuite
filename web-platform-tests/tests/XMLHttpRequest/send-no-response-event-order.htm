<!DOCTYPE html>
<html>
<head>
    <link rel="help" href="http://dvcs.w3.org/hg/xhr/raw-file/tip/Overview.html#handler-xhr-onloadstart" data-tested-assertations="../.." />
    <link rel="help" href="http://dvcs.w3.org/hg/xhr/raw-file/tip/Overview.html#handler-xhr-onloadend" data-tested-assertations="../.." />
    <link rel="help" href="http://dvcs.w3.org/hg/xhr/raw-file/tip/Overview.html#event-xhr-loadstart" data-tested-assertations="../.." />
    <link rel="help" href="http://dvcs.w3.org/hg/xhr/raw-file/tip/Overview.html#event-xhr-loadend" data-tested-assertations="../.." />
    <link rel="help" href="http://dvcs.w3.org/hg/xhr/raw-file/tip/Overview.html#the-send()-method" data-tested-assertations="following-sibling::ol/li[9]/ol/li[2]" />
    <link rel="help" href="http://dvcs.w3.org/hg/xhr/raw-file/tip/Overview.html#infrastructure-for-the-send()-method" data-tested-assertations="following::dt[10] following::a[contains(@href,'#switch-done')]/.." />
    <link rel="help" href="http://dvcs.w3.org/hg/xhr/raw-file/tip/Overview.html#switch-done" data-tested-assertations="following::ol[1]/li[3] following::ol[1]/li[4] following::ol[1]/li[6] following::ol[1]/li[7]" />
    <link rel="help" href="http://dvcs.w3.org/hg/xhr/raw-file/tip/Overview.html#the-response-attribute" data-tested-assertations="following-sibling::ol/li[1]" />
    <script src="/resources/testharness.js"></script>
    <title>XMLHttpRequest: The send() method: event order when there is no response entity body</title>
</head>

<body>
    <div id="log"></div>
    
    <script type="text/javascript">
        var test = async_test();

        test.step(function()
        {
            var xhr = new XMLHttpRequest();
            var expect = ["loadstart", 4, "load", "loadend"];
            var actual = [];

            xhr.onreadystatechange = function()
            {
                test.step(function()
                {
                    if (xhr.readyState == 3) 
                    {
                        assert_equals(xhr.response, "");
                    }
                    else if (xhr.readyState == 4) 
                    {
                        actual.push(xhr.readyState);
                    }
                });
            };
            
            xhr.onloadstart        = function(e){ actual.push(e.type); };
            xhr.onload             = function(e){ actual.push(e.type); };
            xhr.onloadend          = function(e){ actual.push(e.type); VerifyResult()};
            
            xhr.upload.onloadstart = function(e){ assert_unreached('upload.'+e.type); };
            xhr.upload.onload      = function(e){ assert_unreached('upload.'+e.type); };
            xhr.upload.onloadend   = function(e){ assert_unreached('upload.'+e.type); };

            function VerifyResult()
            {
                test.step(function()
                {
                    assert_array_equals(actual, expect);
                    test.done();
                });
            };

            xhr.open("POST", "./resources/content.py", true);
            xhr.send();
        });
    </script>
</body>
</html>
